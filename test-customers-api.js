// Script de teste para a API de clientes
const fetch = require('node-fetch');

async function testCustomersAPI() {
  console.log('üß™ Testando API de clientes...\n');

  try {
    // Testar busca de todos os clientes
    console.log('üìã Testando busca de todos os clientes...');
    const response = await fetch('http://localhost:3000/api/customers');
    
    console.log('üìä Status da resposta:', response.status);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ API funcionando corretamente!');
      console.log('üë• Dados recebidos:', {
        totalCustomers: data.customers?.length || 0
      });
      
      if (data.customers && data.customers.length > 0) {
        console.log('\nüë§ Primeiros 3 clientes:');
        data.customers.slice(0, 3).forEach((customer, index) => {
          console.log(`  ${index + 1}. ${customer.name}`);
          console.log(`     Email: ${customer.email || 'N/A'}`);
          console.log(`     CPF/CNPJ: ${customer.cpf_cnpj || 'N/A'}`);
          console.log(`     Telefone: ${customer.phone || 'N/A'}`);
          console.log('');
        });
      } else {
        console.log('‚ö†Ô∏è Nenhum cliente encontrado.');
      }
    } else {
      console.log('‚ùå Erro na API:', response.status, response.statusText);
      const errorText = await response.text();
      console.log('üìÑ Resposta de erro:', errorText);
    }

    // Testar busca por query
    console.log('\nüîç Testando busca por query...');
    const searchResponse = await fetch('http://localhost:3000/api/customers?q=Jo√£o');
    
    if (searchResponse.ok) {
      const searchData = await searchResponse.json();
      console.log(`‚úÖ Busca funcionando! Encontrados ${searchData.customers?.length || 0} clientes`);
    } else {
      console.log('‚ùå Erro na busca:', searchResponse.status);
    }

    // Testar cria√ß√£o de cliente
    console.log('\nüìù Testando cria√ß√£o de cliente...');
    const newCustomer = {
      name: 'Teste Cliente API',
      email: 'teste@api.com',
      cpf_cnpj: '11122233344',
      phone: '(11) 12345-6789',
      city: 'S√£o Paulo',
      state: 'SP'
    };

    const createResponse = await fetch('http://localhost:3000/api/customers', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(newCustomer)
    });

    if (createResponse.ok) {
      const createdData = await createResponse.json();
      console.log('‚úÖ Cliente criado com sucesso:', createdData.customer.name);
      
      // Testar atualiza√ß√£o do cliente
      console.log('\n‚úèÔ∏è Testando atualiza√ß√£o de cliente...');
      const updateData = {
        name: 'Teste Cliente API Atualizado',
        phone: '(11) 98765-4321'
      };

      const updateResponse = await fetch(`http://localhost:3000/api/customers/${createdData.customer.id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updateData)
      });

      if (updateResponse.ok) {
        const updatedData = await updateResponse.json();
        console.log('‚úÖ Cliente atualizado com sucesso:', updatedData.customer.name);
      } else {
        console.log('‚ùå Erro ao atualizar cliente:', updateResponse.status);
      }
    } else {
      const errorData = await createResponse.json();
      console.log('‚ùå Erro ao criar cliente:', errorData.error);
    }

    // Testar valida√ß√£o de CPF inv√°lido
    console.log('\nüö´ Testando valida√ß√£o de CPF inv√°lido...');
    const invalidCustomer = {
      name: 'Cliente CPF Inv√°lido',
      cpf_cnpj: '12345678900' // CPF inv√°lido
    };

    const invalidResponse = await fetch('http://localhost:3000/api/customers', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(invalidCustomer)
    });

    if (!invalidResponse.ok) {
      const invalidData = await invalidResponse.json();
      console.log('‚úÖ Valida√ß√£o funcionando! Erro:', invalidData.error);
    } else {
      console.log('‚ö†Ô∏è Valida√ß√£o n√£o funcionou como esperado');
    }

  } catch (error) {
    console.error('üí• Erro ao testar API:', error.message);
  }
}

// Executar o teste
testCustomersAPI(); 